Script started on Mon 11 Jun 2018 04:19:06 PM EDT
]0;jim@jim-TMM: ~/Desktop/github/CSCI377[01;32mjim@jim-TMM[00m:[01;34m~/Desktop/github/CSCI377[00m$ python./[K[K ./t[KsortTest.py
Enter How many variables to sort: 2
Enter range of vartiablees from 0 to : 4
Enter "Insertion" for insertion Sort and "Merge" for Merge Sort: Insertion

This is a unsorted list containing 2 variables:
2
0

This is a Insertion list containing 2 variables:
0
2
With 2 variables ranging from 0 to 4, Insertion sort took 0 seconds.

This is a unsorted list containing 4 variables:
7
2
6
3

This is a Insertion list containing 4 variables:
2
3
6
7
With 4 variables ranging from 0 to 8, Insertion sort took 0 seconds.

This is a unsorted list containing 8 variables:
6
14
8
15
8
13
10
3

This is a Insertion list containing 8 variables:
3
6
8
8
10
13
14
15
With 8 variables ranging from 0 to 16, Insertion sort took 0 seconds.
With 16 variables ranging from 0 to 32, Insertion sort took 0 seconds.
With 32 variables ranging from 0 to 64, Insertion sort took 0 seconds.
With 64 variables ranging from 0 to 128, Insertion sort took 0 seconds.
With 128 variables ranging from 0 to 256, Insertion sort took 0 seconds.
With 256 variables ranging from 0 to 512, Insertion sort took 0 seconds.
With 512 variables ranging from 0 to 1024, Insertion sort took 0 seconds.
With 1024 variables ranging from 0 to 2048, Insertion sort took 0 seconds.
With 2048 variables ranging from 0 to 4096, Insertion sort took 0 seconds.
With 4096 variables ranging from 0 to 8192, Insertion sort took 0 seconds.
With 8192 variables ranging from 0 to 16384, Insertion sort took 1 seconds.
With 16384 variables ranging from 0 to 32768, Insertion sort took 7 seconds.
With 32768 variables ranging from 0 to 65536, Insertion sort took 31 seconds.
With 65536 variables ranging from 0 to 131072, Insertion sort took 127 seconds.
]0;jim@jim-TMM: ~/Desktop/github/CSCI377[01;32mjim@jim-TMM[00m:[01;34m~/Desktop/github/CSCI377[00m$ exit
exit

Script done on Mon 11 Jun 2018 04:22:51 PM EDT
